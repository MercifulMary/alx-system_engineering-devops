#!/usr/bin/env bash
# Manage Script for 'manage_my_process'
# 
# This script provides control over the 'manage_my_process' program. It accepts
# three arguments: 'start', 'stop', and 'restart', which allow you to control
# the behavior of 'manage_my_process'. Here's how each argument works:
#
#   - 'start':
#     1. Initiates 'manage_my_process' in the background.
#     2. Creates a file at '/var/run/my_process.pid' to store its PID.
#     3. Outputs "manage_my_process started".
#
#   - 'stop':
#     1. Outputs "manage_my_process stopped".
#     2. Retrieves the PID of 'manage_my_process' from '/var/run/my_process.pid'.
#     3. Sends a termination signal to the 'manage_my_process' process.
#     4. Removes the PID file '/var/run/my_process.pid'.
#
#   - 'restart':
#     1. Stops the running 'manage_my_process' following the 'stop' procedure.
#     2. Starts a new instance of 'manage_my_process' following the 'start' procedure.
#     3. Outputs "manage_my_process restarted".
#
# If any other argument or no argument is provided, it displays a usage message:
# "Usage: manage_my_process {start|stop|restart}"

if [ "${1}" == "start" ]
then
    ./manage_my_process &    # Start 'manage_my_process' in the background
    touch /var/run/my_process.pid    # Create a PID file
    echo "$!" > /var/run/my_process.pid    # Write the PID to the file
    echo "manage_my_process started"
elif [ "${1}" == "stop" ]
then
    echo "manage_my_process stopped"
    kill "$(cat /var/run/my_process.pid)"    # Send a termination signal
    rm /var/run/my_process.pid    # Remove the PID file
elif [ "${1}" == "restart" ]
then
    kill "$(cat /var/run/my_process.pid)"    # Stop the existing process
    rm /var/run/my_process.pid    # Remove the PID file
    ./manage_my_process &    # Start a new 'manage_my_process' instance
    touch /var/run/my_process.pid    # Create a new PID file
    echo "$!" > /var/run/my_process.pid    # Write the new PID to the file
    echo "manage_my_process restarted"
else
    echo "Usage: manage_my_process {start|stop|restart}"
fi
